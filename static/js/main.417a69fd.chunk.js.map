{"version":3,"sources":["components/alumnis/Alumni.jsx","components/common/Loader.jsx","components/common/Alert.jsx","graph/queries.js","components/alumnis/Alumnis.jsx","components/alumnis/AlumniDetails.jsx","components/Navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["Alumni","_ref","alumni","react_default","a","createElement","className","href","concat","id","src","avatar","url","alt","name","react_router_dom","to","headline","email","cell","Loader","style","minHeight","width","height","role","Alert","alert","status","message","getAlumnisQuery","gql","_templateObject","getAlumniQuery","_templateObject2","Members","react_apollo_esm","query","loading","error","data","common_Loader","common_Alert","alumnis","map","key","alumnis_Alumni","Component","AlumniDetails","props","variables","Object","objectSpread","match","params","_data$alumni","description","bio","console","log","fileName","Navbar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","exact","App","components_Navbar","react_router","path","render","component","Alumnis","Boolean","window","location","hostname","client","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.417a69fd.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Alumni = ({ alumni }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <div className=\"media align-items-center\">\n          <a href={`alumnis/${alumni.id}`} className=\"text-dark\">\n            <div className=\"avatar avatar-5xl\">\n              <img\n                className=\"rounded-circle img-thumbnail border shadow-sm\"\n                src={alumni.avatar.url}\n                alt={alumni.name}\n              />\n            </div>\n          </a>\n\n          <div className=\"media-body ml-3\">\n            <Link to={`alumnis/${alumni.id}`} className=\"text-dark\">\n              <h5 className=\"mb-0\">{alumni.name}</h5>\n            </Link>\n            <p>{alumni.headline}</p>\n            <a href={`mailto:${alumni.email}`}>{alumni.email}</a>\n            <br />\n            {alumni.cell ? (\n              <div>\n                <strong>Cell: </strong>\n                <a href={`tel:0${alumni.cell}`}>0{alumni.cell}</a>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Alumni;\n","import React from 'react';\n\nconst Loader = () => {\n  return (\n    <div\n      className=\"d-flex justify-content-center align-items-center w-100\"\n      style={{ minHeight: '100vh' }}\n    >\n      <div\n        className=\"spinner-border\"\n        style={{ width: '3rem', height: '3rem' }}\n        role=\"status\"\n      >\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react'\n\nconst Alert = ({ alert }) => {\n  let className = 'alert alert-';\n  switch (alert.status) {\n    case 400:\n      className += 'warning';\n      break;\n    \n    case 404:\n      className += 'danger';\n      break;\n    \n    case 200:\n      className += 'success';\n      break;\n\n    default:\n      className += 'info';\n      break;\n  }\n\n  return <div className={className}>{alert.message}</div>;\n  \n}\n \nexport default Alert;","import { gql } from 'apollo-boost';\n\nexport const getAlumnisQuery = gql`\n  {\n    alumnis {\n      id\n      name\n      headline\n      email\n      cell\n      avatar {\n        fileName\n        url\n      }\n    }\n  }\n`;\n\nexport const getAlumniQuery = gql`\n  query($id: ID) {\n    alumni(where: { id: $id }) {\n      name\n      headline\n      description\n      bio\n      email\n      cell\n      avatar {\n        fileName\n        url\n      }\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport Alumni from './Alumni';\nimport Loader from '../common/Loader';\nimport Alert from '../common/Alert';\nimport { getAlumnisQuery } from '../../graph/queries';\nimport { Query } from 'react-apollo';\n\nclass Members extends Component {\n  render() {\n    return (\n      <div className=\"row\">\n        <Query query={getAlumnisQuery}>\n          {({ loading, error, data }) => {\n            if (loading) return <Loader />;\n            if (error) return <Alert alert={error} />;\n            return data.alumnis.map(alumni => (\n              <div className=\"col-lg-6 mb-4\" key={alumni.id}>\n                <Alumni alumni={alumni} />\n              </div>\n            ));\n          }}\n        </Query>\n      </div>\n    );\n  }\n}\n\nexport default Members;\n","import React from 'react';\nimport Loader from '../common/Loader';\nimport Alert from '../common/Alert';\nimport { getAlumniQuery } from '../../graph/queries';\nimport { Query } from 'react-apollo';\n\nconst AlumniDetails = props => {\n  return (\n    <Query query={getAlumniQuery} variables={{ ...props.match.params }}>\n      {({ loading, error, data }) => {\n        if (loading) return <Loader />;\n        if (error) return <Alert alert={error} />;\n        const {\n          name,\n          headline,\n          description,\n          bio,\n          email,\n          cell,\n          avatar\n        } = data.alumni;\n\n        console.log({ name, headline, description, bio, email, cell, avatar });\n\n        return (\n          <div className=\"row\">\n            <div className=\"col-xxl-3 col-lg-4 col-sm-6 mb-4 mb-sm-0\">\n              <div className=\"card\">\n                <img\n                  src={avatar.url}\n                  alt={avatar.fileName}\n                  className=\"card-img-top\"\n                />\n                <div className=\"card-body\">\n                  <h4 className=\"mb-0\">{name}</h4>\n                  <p className=\"lead\">{headline}</p>\n                  <ul className=\"list-unstyled fs--1 mb-0\">\n                    <p className=\"mb-0\">\n                      <strong>Cell: </strong>\n                      {cell ? <a href={`tel:0${cell}`}>0{cell}</a> : null}\n                    </p>\n                    <p className=\"mb-0\">\n                      <strong>Email: </strong>\n                      {email ? <a href={`mailto:${email}`}>{email}</a> : null}\n                    </p>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div className=\"col\">\n              <div className=\"card\">\n                <div className=\"card-header bg-light\">\n                  <h5 className=\"mb-0\">Details</h5>\n                </div>\n                <div className=\"card-body\">\n                  <p>{description}</p>\n                </div>\n              </div>\n            </div>\n\n            {/* <div className=\"col-lg-3\">\n              <div className=\"card\">\n                <div className=\"card-header bg-light\">\n                  <h5 className=\"mb-0\">Contact Info</h5>\n                </div>\n                <div className=\"card-body fs--1\">\n                  \n                </div>\n              </div>\n            </div> */}\n          </div>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default AlumniDetails;\n","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-dark bg-dark navbar-standard navbar-theme navbar-expand fs--1 font-weight-semi-bold mb-4\">\n      <div className=\"container\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          SUST CEP 19\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <NavLink exact className=\"nav-link\" to=\"/\">\n                Home\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/alumnis\">\n                Alumnis\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Alumnis from './components/alumnis/Alumnis';\nimport AlumniDetails from './components/alumnis/AlumniDetails';\nimport Navbar from './components/Navbar';\n\nclass App extends Component {\n  render() {\n    return (\n      <main>\n        <Navbar />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" render={() => 'Home'} />\n            <Route exact path=\"/alumnis\" component={Alumnis} />\n            <Route exact path=\"/alumnis/:id\" component={AlumniDetails} />\n          </Switch>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ApolloClient } from 'apollo-client';\nimport { HttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloProvider } from 'react-apollo';\n\n// GraphCMS endpoint\nconst GRAPHCMS_API =\n  'https://api-apeast.graphcms.com/v1/cjq8hajbfdjco01b05b32vxxe/master';\n\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: GRAPHCMS_API }),\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Router>\n      <App />\n    </Router>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}